name: Test
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
jobs:
  install-react-json-input:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        id: cache
        env:
          cache-name: cache-react-json-input-node-modules
        with:
          path: node_modules
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('package-lock.json') }}
        working-directory:
          packages/react-json-input
      - uses: actions/setup-node@v1
        with:
          node-version: 14
      - if: steps.cache.outputs.cache-hit != 'true'
        run: npm ci
  install-react-json-input-antd:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        id: cache
        env:
          cache-name: cache-react-json-input-antd-node-modules
        with:
          path: node_modules
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('package-lock.json') }}
        working-directory:
          packages/antd
      - uses: actions/setup-node@v1
        with:
          node-version: 14
      - if: steps.cache.outputs.cache-hit != 'true'
        run: npm ci
  install-demo:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        id: cache
        env:
          cache-name: cache-demo-node-modules
        with:
          path: node_modules
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('package-lock.json') }}
        working-directory:
          demo
      - uses: actions/setup-node@v1
        with:
          node-version: 14
      - if: steps.cache.outputs.cache-hit != 'true'
        run: npm ci
  install:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        id: cache-react-json-input
        env:
          cache-name: cache-react-json-input-node-modules
        with:
          path: node_modules
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('package-lock.json') }}
        working-directory:
          packages/react-json-input
      - if: steps.cache-react-json-input.outputs.cache-hit != 'true'
        run: |
          echo "No cache found"
          exit 1
      - uses: actions/cache@v2
        id: cache
        env:
          cache-name: cache-node-modules
        with:
          path: node_modules
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('package-lock.json') }}
      - uses: actions/setup-node@v1
        with:
          node-version: 14
      - if: steps.cache.outputs.cache-hit != 'true'
        run: npm ci
  test-react-json-input:
    needs: [install, install-react-json-input]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        id: cache
        env:
          cache-name: cache-node-modules
        with:
          path: node_modules
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('package-lock.json') }}
      - uses: actions/cache@v2
        id: cache-react-json-input
        env:
          cache-name: cache-react-json-input-node-modules
        with:
          path: node_modules
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('package-lock.json') }}
        working-directory:
          packages/react-json-input
      - if: steps.cache.outputs.cache-hit != 'true' || steps.cache-react-json-input.outputs.cache-hit != 'true'
        run: |
          echo "No cache found"
          exit 1
      - uses: actions/setup-node@v1
        with:
          node-version: 14
      - run: |
          npm ci
          npm run test:ci
        working-directory: packages/react-json-input
  lint-react-json-input:
    needs: [install, install-react-json-input]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        id: cache
        env:
          cache-name: cache-node-modules
        with:
          path: node_modules
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('package-lock.json') }}
      - uses: actions/cache@v2
        id: cache-react-json-input
        env:
          cache-name: cache-react-json-input-node-modules
        with:
          path: node_modules
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('package-lock.json') }}
        working-directory:
          packages/react-json-input
      - if: steps.cache.outputs.cache-hit != 'true' || steps.cache-react-json-input.outputs.cache-hit != 'true'
        run: |
          echo "No cache found"
          exit 1
      - uses: actions/setup-node@v1
        with:
          node-version: 14
      - run: |
          npm ci
          npm run lint
        working-directory: packages/react-json-input
  build-react-json-input:
    needs: [install, install-react-json-input]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        id: cache
        env:
          cache-name: cache-node-modules
        with:
          path: node_modules
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('package-lock.json') }}
      - uses: actions/cache@v2
        id: cache-react-json-input
        env:
          cache-name: cache-react-json-input-node-modules
        with:
          path: node_modules
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('package-lock.json') }}
        working-directory:
          packages/react-json-input
      - if: steps.cache.outputs.cache-hit != 'true' || steps.cache-react-json-input.outputs.cache-hit != 'true'
        run: |
          echo "No cache found"
          exit 1
      - uses: actions/cache@v2
        id: cache-react-json-input
        env:
          cache-name: cache-react-json-input-dist
        with:
          path: dist
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('.') }}
        working-directory:
          packages/react-json-input
      - uses: actions/setup-node@v1
        with:
          node-version: 14
      - if: steps.cache-react-json-input.outputs.cache-hit != 'true'
        run: |
          npm ci
          npm run build
        working-directory:
          packages/react-json-input
  lint-antd:
    needs: [install, install-react-json-input, install-react-json-input-antd, build-react-json-input]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        id: cache
        env:
          cache-name: cache-node-modules
        with:
          path: node_modules
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('package-lock.json') }}
      - uses: actions/cache@v2
        id: cache-react-json-input
        env:
          cache-name: cache-react-json-input-node-modules
        with:
          path: node_modules
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('package-lock.json') }}
        working-directory:
          packages/react-json-input
      - uses: actions/cache@v2
        id: cache-react-json-input-antd
        env:
          cache-name: cache-react-json-input-antd-node-modules
        with:
          path: node_modules
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('package-lock.json') }}
        working-directory:
          packages/antd
      - uses: actions/cache@v2
        id: cache-react-json-input-dist
        env:
          cache-name: cache-react-json-input-dist
        with:
          path: dist
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('.') }}
        working-directory:
          packages/react-json-input
      - if: 
          steps.cache.outputs.cache-hit != 'true' || 
          steps.cache-react-json-input.outputs.cache-hit != 'true' || 
          steps.cache-react-json-input-antd.outputs.cache-hit != 'true' ||
          steps.cache-react-json-input-dist.outputs.cache-hit != 'true'
        run: |
          echo "No cache found"
          exit 1
      - uses: actions/setup-node@v1
        with:
          node-version: 14
      - run: |
          npm ci
          npm run lint
        working-directory: packages/antd
  test-antd:
    needs: [install, install-react-json-input, install-react-json-input-antd, build-react-json-input]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
     - uses: actions/cache@v2
        id: cache
        env:
          cache-name: cache-node-modules
        with:
          path: node_modules
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('package-lock.json') }}
      - uses: actions/cache@v2
        id: cache-react-json-input
        env:
          cache-name: cache-react-json-input-node-modules
        with:
          path: node_modules
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('package-lock.json') }}
        working-directory:
          packages/react-json-input
      - uses: actions/cache@v2
        id: cache-react-json-input-antd
        env:
          cache-name: cache-react-json-input-antd-node-modules
        with:
          path: node_modules
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('package-lock.json') }}
        working-directory:
          packages/antd
      - uses: actions/cache@v2
        id: cache-react-json-input-dist
        env:
          cache-name: cache-react-json-input-dist
        with:
          path: dist
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('.') }}
        working-directory:
          packages/react-json-input
      - if: 
          steps.cache.outputs.cache-hit != 'true' || 
          steps.cache-react-json-input.outputs.cache-hit != 'true' || 
          steps.cache-react-json-input-antd.outputs.cache-hit != 'true' ||
          steps.cache-react-json-input-dist.outputs.cache-hit != 'true'
        run: |
          echo "No cache found"
          exit 1
      - uses: actions/setup-node@v1
        with:
          node-version: 14
      - run: |
          npm ci
          npm run test:ci
        working-directory: packages/antd
  build-react-json-input-antd:
    needs: [install, install-react-json-input, install-react-json-input-antd, build-react-json-input]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
     - uses: actions/cache@v2
        id: cache
        env:
          cache-name: cache-node-modules
        with:
          path: node_modules
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('package-lock.json') }}
      - uses: actions/cache@v2
        id: cache-react-json-input
        env:
          cache-name: cache-react-json-input-node-modules
        with:
          path: node_modules
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('package-lock.json') }}
        working-directory:
          packages/react-json-input
      - uses: actions/cache@v2
        id: cache-react-json-input-antd
        env:
          cache-name: cache-react-json-input-antd-node-modules
        with:
          path: node_modules
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('package-lock.json') }}
        working-directory:
          packages/antd
      - uses: actions/cache@v2
        id: cache-react-json-input-dist
        env:
          cache-name: cache-react-json-input-dist
        with:
          path: dist
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('.') }}
        working-directory:
          packages/react-json-input
      - if: 
          steps.cache.outputs.cache-hit != 'true' || 
          steps.cache-react-json-input.outputs.cache-hit != 'true' || 
          steps.cache-react-json-input-antd.outputs.cache-hit != 'true' ||
          steps.cache-react-json-input-dist.outputs.cache-hit != 'true'
        run: |
          echo "No cache found"
          exit 1
      - uses: actions/cache@v2
        id: cache-react-json-input
        env:
          cache-name: cache-react-json-input-antd-dist
        with:
          path: dist
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('.') }}
        working-directory:
          packages/antd
      - uses: actions/setup-node@v1
        with:
          node-version: 14
      - if: steps.cache-react-json-input.outputs.cache-hit != 'true'
        run: |
          npm ci
          npm run build
        working-directory:
          packages/antd
  lint-demo:
    needs: [install, install-react-json-input, install-react-json-input-antd, install-demo, build-react-json-input, build-react-json-input-antd]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
     - uses: actions/cache@v2
        id: cache
        env:
          cache-name: cache-node-modules
        with:
          path: node_modules
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('package-lock.json') }}
      - uses: actions/cache@v2
        id: cache-react-json-input
        env:
          cache-name: cache-react-json-input-node-modules
        with:
          path: node_modules
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('package-lock.json') }}
        working-directory:
          packages/react-json-input
      - uses: actions/cache@v2
        id: cache-react-json-input-antd
        env:
          cache-name: cache-react-json-input-antd-node-modules
        with:
          path: node_modules
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('package-lock.json') }}
        working-directory:
          packages/antd
       - uses: actions/cache@v2
        id: cache-demo
        env:
          cache-name: cache-demo-node-modules
        with:
          path: node_modules
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('package-lock.json') }}
        working-directory:
          demo
      - uses: actions/cache@v2
        id: cache-react-json-input-dist
        env:
          cache-name: cache-react-json-input-dist
        with:
          path: dist
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('.') }}
        working-directory:
          packages/react-json-input
      - uses: actions/cache@v2
        id: cache-react-json-input-antd-dist
        env:
          cache-name: cache-react-json-input-antd-dist
        with:
          path: dist
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('.') }}
        working-directory:
          packages/antd
      - if: 
          steps.cache.outputs.cache-hit != 'true' || 
          steps.cache-react-json-input.outputs.cache-hit != 'true' || 
          steps.cache-react-json-input-antd.outputs.cache-hit != 'true' ||
          steps.cache-demo.outputs.cache-hit != 'true' ||
          steps.cache-react-json-input-dist.outputs.cache-hit != 'true'
          steps.cache-react-json-input-antd-dist.outputs.cache-hit != 'true'
        run: |
          echo "No cache found"
          exit 1
      - uses: actions/setup-node@v1
        with:
          node-version: 14
      - run: |
          npm ci
          npm run lint
        working-directory: demo