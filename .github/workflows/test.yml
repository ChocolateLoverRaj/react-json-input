name: Test
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
jobs:
  install:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        id: cache
        env:
          cache-name: cache-node-modules
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('pnpm-lock.yaml') }}
      - uses: actions/setup-node@v1
        with:
          node-version: 14
      - if: steps.cache.outputs.cache-hit != 'true'
        uses: pnpm/action-setup@v2.0.1
        with:
          version: 6.7.6
      - if: steps.cache.outputs.cache-hit != 'true'
        run: pnpm i
      - if: steps.cache.outputs.cache-hit != 'true'
        run: pnpm run build
        working-directory: packages/react-json-input
      - if: steps.cache.outputs.cache-hit != 'true'
        run: pnpm run build
        working-directory: packages/antd
  test-react-json-input:
    needs: [install]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        id: cache
        env:
          cache-name: cache-node-modules
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('pnpm-lock.yaml') }}
      - if: steps.cache.outputs.cache-hit != 'true'
        run: |
          echo "No cache found"
          exit 1
      - uses: actions/setup-node@v1
        with:
          node-version: 14
      - run: pnpm run test:ci
        working-directory: packages/react-json-input
  lint-react-json-input:
    needs: [install]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        id: cache
        env:
          cache-name: cache-node-modules
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('pnpm-lock.yaml') }}
      - if: steps.cache.outputs.cache-hit != 'true'
        run: |
          echo "No cache found"
          exit 1
      - uses: actions/setup-node@v1
        with:
          node-version: 14
      - run: npm run lint
        working-directory: packages/react-json-input
  lint-antd:
    needs: [install]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        id: cache
        env:
          cache-name: cache-node-modules
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('pnpm-lock.yaml') }}
      - if: steps.cache.outputs.cache-hit != 'true'
        run: |
          echo "No cache found"
          exit 1
      - uses: actions/setup-node@v1
        with:
          node-version: 14
      - run: pnpm run lint
        working-directory: packages/antd
  test-antd:
    needs: [install]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        id: cache
        env:
          cache-name: cache-node-modules
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('pnpm-lock.yaml') }}
      - if: steps.cache.outputs.cache-hit != 'true'
        run: |
          echo "No cache found"
          exit 1
      - uses: actions/setup-node@v1
        with:
          node-version: 14
      - run: pnpm run test:ci
        working-directory: packages/antd
  lint-demo:
    needs: [install]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        id: cache
        env:
          cache-name: cache-node-modules
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('pnpm-lock.yaml') }}
      - if: steps.cache.outputs.cache-hit != 'true'
        run: |
          echo "No cache found"
          exit 1
      - uses: actions/setup-node@v1
        with:
          node-version: 14
      - run: pnpm run lint
        working-directory: demo